{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael Tho\\\\Documents\\\\GitHub\\\\frontend\\\\src\\\\pages\\\\login.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/icon.png';\nimport axios from 'axios'; //material ui\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 10px auto',\n    height: '50px',\n    width: '50px'\n  },\n  pageTitle: {\n    margin: '10px auto 20px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  button: {\n    marginTop: 20\n  }\n}; //login rendering\n\nclass login extends Component {\n  //default fields\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //change load flag\n\n      this.setState({\n        loading: true\n      }); //login fields for userData object\n\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      }; //actual redirection\n\n      axios.post('/login', userData).then(result => {});\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      //loading after submit\n      error: {}\n    };\n  } //redirect after submit\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return (//create responsive division on page\n      React.createElement(Grid, {\n        container: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: AppIcon,\n        alt: \"logo\",\n        className: classes.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h4\",\n        className: classes.pageTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        label: \"Email\",\n        className: classes.textField,\n        value: this.state.email,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        label: \"password\",\n        className: classes.textField,\n        value: this.state.password,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Login\"))), React.createElement(Grid, {\n        item: true,\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))\n    );\n  }\n\n} //checks prop types for login\n\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(login);","map":{"version":3,"sources":["C:/Users/Michael Tho/Documents/GitHub/frontend/src/pages/login.js"],"names":["React","Component","withStyles","PropTypes","AppIcon","axios","Grid","Typography","TextField","Button","styles","form","textAlign","image","margin","height","width","pageTitle","textField","button","marginTop","login","constructor","handleSubmit","event","preventDefault","setState","loading","userData","email","state","password","post","then","result","handleChange","target","name","value","error","render","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/icon.png';\r\nimport axios from 'axios';\r\n\r\n//material ui\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n        margin: '20px auto 10px auto',\r\n        height: '50px',\r\n        width: '50px'\r\n    },\r\n    pageTitle: {\r\n        margin: '10px auto 20px auto'\r\n    },\r\n    textField: {\r\n        margin: '10px auto 10px auto'\r\n    },\r\n    button: {\r\n        marginTop: 20\r\n    }\r\n}\r\n\r\n//login rendering\r\nclass login extends Component {\r\n    //default fields\r\n    constructor() {\r\n        super();\r\n        this.state ={\r\n            email: '',\r\n            password: '',\r\n            loading: false, //loading after submit\r\n            error: {}\r\n        }\r\n    }\r\n    //redirect after submit\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        //change load flag\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        //login fields for userData object\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        //actual redirection\r\n        axios.post('/login',userData)\r\n            .then((result) => {\r\n\r\n            })\r\n    }\r\n    //targets form field and allows change of target value\r\n    handleChange= (event) => {\r\n        this.setState({\r\n           [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n            const { classes } = this.props;\r\n        return (\r\n            //create responsive division on page\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt=\"logo\" className={classes.image}/>\r\n                    <Typography variant=\"h4\" className={classes.pageTitle}>\r\n                        Login\r\n                    </Typography>\r\n                    {/*login form*/}\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField id=\"email\" name=\"email\" type=\"email\" label=\"Email\"\r\n                            className={classes.textField} value={this.state.email}\r\n                            onChange={this.handleChange} fullWidth/>\r\n                        <TextField id=\"password\" name=\"password\" type=\"password\" label=\"password\"\r\n                            className={classes.textField} value={this.state.password}\r\n                            onChange={this.handleChange} fullWidth/>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\"\r\n                            className={classes.button}>Login</Button>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n//checks prop types for login\r\nlogin.propTypes = {\r\n        classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(login);"]},"metadata":{},"sourceType":"module"}